/* spellchecker:disable */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&sk {
    release-after-ms = <4000>;
    quick-release;
    lazy;
};

&lt {
    tapping-term-ms = <200>;
};

&mt {
    tapping-term-ms = <200>;
};

/ {
    chosen {
        zmk,charmap = &charmap_us;
    };
    behaviors {
        hml: homerow_mods_left {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS_LEFT";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;
    
          flavor = "balanced";
          tapping-term-ms = <280>;
          quick-tap-ms = <175>;        // repeat on tap-into-hold
          // global-quick-tap-ms = <150>;         // requires PR #1387
          global-quick-tap;
          hold-trigger-key-positions = <KEYS_R KEYS_T>;
          hold-trigger-on-release;       // requires PR #1423
        };

        hmr: homerow_mods_right {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS_RIGHT";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;
    
          flavor = "balanced";
          tapping-term-ms = <280>;
          // global-quick-tap-ms = <150>;         // requires PR #1387
          quick_tap_ms = <175>;
          global-quick-tap;
          hold-trigger-key-positions = <KEYS_L KEYS_T>;
          hold-trigger-on-release;       // requires PR #1423
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            display-name = "COLEMAK";
            bindings = <
&kp LA(L)    &kp W    &kp F    &kp P    &hmr LS(LC(LALT)) B    &hmr LS(LC(LALT)) J    &kp L    &kp U    &kp Y    &kp LA(W)
&hml LSHFT A    &hml LALT R    &hml LCTL S    &hml LCMD T    &kp G    &kp M    &hmr RCMD N    &hmr RCTL E    &hmr RALT I    &hmr RSHFT O
&kp Z    &kp X    &kp C    &kp D    &kp V    &kp K    &kp H    &kp COMMA    &kp DOT    &kp LA(Q)
            &lt 3 ENTER    &lt 1 SPACE            &lt 2 BSPC       &sk LSHFT
>;
        };

        layer1 {
            display-name = "LEFTTHUMB";
            bindings = <
&kp EXCL    &kp AT    &kp HASH    &kp DLLR    &none    &kp ESC    &none    &none    &none    &none
&hml RSHFT CARET    &hml LALT AMPS    &hml LCTL ASTRK    &hml LCMD BSLH    &kp PIPE    &none    &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT
&kp TILDE    &kp GRAVE    &none    &none    &kp Q    &none    &none    &none    &none    &none
        &none    &none        &kp TAB    &kp GRAVE 
>;
        };

        layer2 {
            display-name = "RTHUMB";
            bindings = <
&kp ASTRK    &kp N7    &kp N8    &kp N9    &kp PLUS    &kp RBKT    &kp RPAR    &kp RBRC    &kp SQT    &kp MINUS
&kp SLASH    &kp N4    &kp N5    &kp N6    &kp MINUS    &kp LBKT    &kp LPAR    &kp LBRC    &kp DQT    &kp UNDER
&kp COMMA    &kp N1    &kp N2    &kp N3    &kp EQL    &kp COLON    &kp SEMI    &kp LT    &kp GT    &kp QMARK
        &kp ENTER    &kp N0        &none    &none 
>;
        };

        layer3 {
            display-name = "FUNC";
            bindings = <
&bootloader    &kp F7    &kp F8    &kp F9    &kp F12    &kp RS(LG(N4))    &kp LA(LC(H))    &kp LA(LC(J))    &kp LA(LC(K))    &kp LA(LC(L))
&none    &kp F4    &kp F5    &kp F6           &kp F11    &none            &none       &none       &none       &none
&none           &kp F1    &kp F2           &kp F3    &kp F10    &none    &none    &none    &none    &none
&none      &none        &none            &none 
>;
        };
    };
};
